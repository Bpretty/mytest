select和epoll的区别？
    select监控的描述符最大为1024；epoll能监控的描述符数量为最大可以打开的文件的数目
    select每次都用都需要将fd集合从用户态拷贝至内核,且要把current(当前进程)把设备等待队列中挂一次；epoll只要注册一次，且把current往等待队列上挂一次
    select需要主动轮询整个fd集合；epoll只需要判断就绪链表是否为空

软链接和硬链接的区别？
    软链接相当于快捷方式，删除原文件则不可访问;硬链接是inode的引用计数，删除原文件后仍然可以访问
    可以给目录做软链接，也可以给一个不存在的文件做软链接;不允许给目录和不存在的文件做硬链接

    软链接是快捷方式，可以用作动态库的升级      ln -s file link
    硬链接是inode的引用计数                     ln file file1

线程间同步的方式？
    互斥锁、条件变量、信号量、读写锁
    临界区

c++11的新特性？
    引入auto和decltype实现类型推导
    使用nullptr代替NULL
    基于范围的for循环
    右值引用和移动语义
    lambda表达式

说说你对面向对象的理解？
    面向对象是一种设计思想，他将现实中的事物抽象出一个个的类对象，现实中事件流程的进行则变成了对象之间的行为交互。
    面向对象具有三大特性：封装、继承、多态。封装是将具有相同属性和行为的一类事物抽象成一个类，隐藏了内部不需要暴露的细节。继承是
    代码复用的手段。多态是说同一操作作用于不同的对象有不同的效果，它实现了接口重用

进程间通信的方式？
    管道、信号、信号量、消息队列、共享内存、socket、eventfd（进程/线程都可）

面向对象设计的基本原则有哪些？
    单一原则：即一个类只做一件事
    开闭原则：对拓展开放对修改关闭。即在不修改源码的前提下拓展其功能
    里氏替换：派生类适应基类
    依赖倒置原则：即面向接口编程，编程依赖抽象。具体来说就是高层不依赖底层，二者都依赖抽象，抽象不依赖细节，细节依赖抽象
    接口原则：使用一个专门的接口而不是使用一个大的总接口

内存区域划分：
    内核区、栈区、堆区、全局/静态区、文字常量区、代码段

死锁的原因？条件？解决方法？
    系统资源不足、流程推进顺序不当、资源分配不当

    互斥、不剥夺、循环等待、请求和保持
    互斥：资源排他性占有，某个时刻只能一个进程占有
    不剥夺：进程已经获得的资源未使用完毕不能被剥夺，只能由进程自己释放
    循环等待：发送死锁时必然存在 进程-资源 的环形等待链
    请求和保持：进程至少占有一个资源，又去请求其他资源，而该资源被其他进程所占有，此时该进程处于阻塞状态，但对自己持有的资源保持不放

    破坏任一条件即可
    破坏请求和保持：一次性分配所有资源，只要该进程有任一资源获取不到，也不给他分配其他资源
    破坏不可剥夺行：当进程获得部分资源时，但是无法获取其他资源时就释放已有资源
    资源有序分配法：系统给每类资源赋予编号，每一个进程按照编号递增的顺序请求资源，释放则相

tcp如何保证可靠传输？
    数据分片和排序、确认和超时重传、数据校验、拥塞控制、流量控制

动态库和静态库区别？
    动态库
        编译时，动态库不会被编入可执行文件，（可执行文件）执行时，动态库需要加载到进程地址空间
    静态库
        编译时，静态库会被编入可执行文件（相当于拷贝了一部分），（可执行文件）执行时，可以删除静态库

同步和异步，阻塞和非阻塞的区别？
    //io分为两个阶段：1，数据准备就绪。2，数据从内核空间复制到用户地址空间
    //阻塞和非阻塞的区别是数据未准备就绪时是一直等待还是立即返回；同步和异步的区别是等待完成数据复制还是直接返回

    同步和异步：
        关注的是消息通信机制--内核和应用程序的交互
        同步需要主动读写数据，在读写的时候是阻塞的；异步不需要主动读写数据，只需要关注 i/o 完成的通知
    阻塞和非阻塞：
        关注的是进程/线程的状态
        其要访问的数据是否就绪，进程/线程是否需要等待

一维数组的初始化：
    数组元素初始化时，如果没有显示提供元素初值，则元素会像普通变量一样初始化：
        内置类型的全局数据，元素初始化为0
        函数体内的数组，元素不会初始化（但是如果只初始化部分元素，其他元素也会被初始化为0）
        非内置类型不论在哪，都会自动调用默认构造函数初始化

---------------------------------------------------------------
树的性质

1，树中的结点数等于所有度的和+1
2，度为m的数第i层至多有 m^(i-1) 个结点
3，高度为h的数至多有 (m^k - 1)/(m - 1) 个结点
4，具有n个结点的m叉树最小高度为 向上取整(logm ((m-1)*n+1) )

-》二叉树的性质

N0 = N2 + 1


---------------------------------------------------------------
红黑树性质

所有节点不是红的就是黑的
根节点是黑色节点
叶子节点都是黑节点
两个红色节点必不相连
每条从根节点到叶节点的路径上的黑色节点数目相同

---------------------------------------------------------------
git
显示暂存区和工作区的差别        git diff filename
显示暂存区和上一次提交的差异    git diff --cached filename
显示两次提交的之间的差异        git diff [first-brach]...[second-branch]

尚未缓存的改动                  git diff 
已经缓存的改动                  git diff --cached
查看已缓存和未缓存的所有改动    git diff HEAD
---------------------------------------------------------------
