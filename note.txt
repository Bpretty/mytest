死锁的原因？条件？解决方法？
    系统资源不足、流程推进顺序不当、资源分配不当

    互斥、不剥夺、循环等待、请求和保持
    互斥：资源排他性占有，某个时刻只能一个进程占有
    不剥夺：进程已经获得的资源未使用完毕不能被剥夺，只能由进程自己释放
    循环等待：发送死锁时必然存在 进程-资源 的环形等待链
    请求和保持：进程至少占有一个资源，又去请求其他资源，而该资源被其他进程所占有，此时该进程处于阻塞状态，但对自己持有的资源保持不放

    破坏任一条件即可
    破坏请求和保持：一次性分配所有资源，只要该进程有任一资源获取不到，也不给他分配其他资源
    破坏不可剥夺行：当进程获得部分资源时，但是无法获取其他资源时就释放已有资源
    资源有序分配法：系统给每类资源赋予编号，每一个进程按照编号递增的顺序请求资源，释放则相

tcp如何保证可靠传输？
    数据分片和排序、确认和超时重传、数据校验、拥塞控制、流量控制

动态库和静态库区别？
    动态库
        编译时，动态库不会被编入可执行文件，（可执行文件）执行时，动态库需要加载到进程地址空间
    静态库
        编译时，静态库会被编入可执行文件（相当于拷贝了一部分），（可执行文件）执行时，可以删除静态库

同步和异步，阻塞和非阻塞的区别？
    //io分为两个阶段：1，数据准备就绪。2，数据从内核空间复制到用户地址空间
    //阻塞和非阻塞的区别是数据未准备就绪时是一直等待还是立即返回；同步和异步的区别是等待完成数据复制还是直接返回

    同步和异步：
        关注的是消息通信机制--内核和应用程序的交互
        同步需要主动读写数据，在读写的时候是阻塞的；异步不需要主动读写数据，只需要关注 i/o 完成的通知
    阻塞和非阻塞：
        关注的是进程/线程的状态
        其要访问的数据是否就绪，进程/线程是否需要等待

---------------------------------------------------------------
树的性质

1，树中的结点数等于所有度的和+1
2，度为m的数第i层至多有 m^(i-1) 个结点
3，高度为h的数至多有 (m^k - 1)/(m - 1) 个结点
4，具有n个结点的m叉树最小高度为 向上取整(logm ((m-1)*n+1) )

-》二叉树的性质

N0 = N2 + 1


---------------------------------------------------------------
红黑树性质

所有节点不是红的就是黑的
根节点是黑节点
两个红色节点必不相连
每条从根节点到叶节点的路径上的黑色节点数目相同
