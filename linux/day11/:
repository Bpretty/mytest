信号默认的五种行为：
终止
终止 core
忽略
暂停
继续:

信号产生的三种方式：
用户输入    ctrl+c ctrl+\
内核产生    异常时
kill


---------------------------------

多线程
cat /etc/proc/task

一个进程中的所有线程共享一个地址空间
线程唯一私有的是线程控制表

exit()  慎重

nptl线程库(当前学习的是这种)
nptl的所有接口都不能使用perro，因为他们没改变erronum这个错误码

只有一个线程，但是同时执行多道执行流-》协程

main线程退出后才回收资源，main线程要最后退出
除了其他线程不能等main线程外，任意线程之间可以等待


子线程可能会打印两次                                                                                             
因为子线程并不是边输出边清空，而是输出玩之后再清空
在子线程输出完成后，此时主线程关闭标准输出会再刷新缓存区，因此有两次

进程里面每一个地址对于所有线程读写权限是一样的，因此，虽然各线程栈空间私有但是其他线程仍然可以访问


11:32 常用法

线程清理函数
