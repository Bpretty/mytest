mmap映射文件大小不需要小于等于实际物理内存大小
mmap给的是要申请的虚拟地址大小，并不是所有的虚拟地址都给映射内存。
偏移一个页大小的整数倍（4k）,否则会映射失败
size设计成4k的整数倍，才不会浪费物理页空间

零拷贝：从内核态到用户态没有拷贝
mmap就是一个零拷贝接口


read/write 读/写数据时会在内核开辟一个4k大小的缓冲区，数据读取时磁盘->内核缓冲区->内存（写入时反之,缓冲区满了写入）,而mmap由dma直接从磁盘搬运至对应内存地址，所以更快


free看空闲物理内存

系统调用因为有内核态和用户态之间的状态切换所以比其他的调用更久


msync 在没有解除映射情况下会写磁盘
mlock 确保数据锁在内存



fread
fwrite
fputc
fgetc
fputs
fgets
以上接口会额外在用户态开辟一个缓冲区以减少系统调用次数（他们内部是调用系统调用read/write实现）
即，以上接口读取数据时：磁盘->内核缓冲区->用户态缓冲区->内存

FILE* -> fd     fileno接口
fd->File*       fdopen接口



文件描述符的复制
dup和dup2

文件描述符复制≠文件描述符赋值
使用dup返回的新的描述符值为没有使用的文件描述符的最小编号，他和旧的文件描述符共享同一个数据结构，增加了数据结构使用的引用计数

可以用于标准输出和标准错误输出重定向
重定向标准错误输出为例：
    使用dup前需要先关闭标准错误输出，再使用dup复制当前描述符
    使用dup2则是，oldfd指向当前描述符，newfd指向标准输出描述符,如果newfd已经打开了则会先关闭



管道
半双工

1，open的时候会阻塞
2，读的时候，管道为空会阻塞；写的时候不会阻塞，除非管道写满了
3，写端断开，读端会得到0

select
maxfd,最大的文件描述符值+1，而不是文件描述符的数量
操作系统每次都是找到没有打开的最小描述符值

